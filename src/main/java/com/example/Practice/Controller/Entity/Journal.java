package com.example.Practice.Controller.Entity;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import lombok.Getter;
import lombok.Setter;
import org.springframework.stereotype.Component;

@Entity
//@Component - Not required as Entity will handle it now
/*
Here Journal is creating a table for me itself as per class name with the structure
but I can also create a table Manually with same structure and it with the class
@Table(name = "journal")  // Make sure the name matches exactly

Since we ask sometimes for altering the table, will it impact if table columns
are not mapped here.
No impact, hibernate will ignore the newly added columns until they are defined
in the entity class. Those columns will be null until mapped again.
*/

/* Getters and setters are annotations we are using from Project Lombok to reduce boilerplate
code and generating getters and setters automatically at the time of compilation.
 */
@Getter
@Setter
public class Journal {

    @Id
    private Integer id; //Use it as my Id, we can also use Autogenerated Id using @GeneratedValue(strategy = GenerationType.IDENTITY)

    private String name;
    private String description;

//    public Integer getId(){
//        return id;
//    }
//
//    public void setId(Integer id){
//        this.id = id;
//    }
//
//    public String getName(){
//        return name;
//    }
//
//    public void setName(String name){
//        this.name = name;
//    }
//
//    public void setDescription(String description){
//        this.description = description;
//    }
//
//    public String getDescription(){
//        return description;
//    }

}
